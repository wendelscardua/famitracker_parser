require 'famitracker_parser/song'

grammar FamitrackerTextGrammar
  rule song
    export_description linebreak
    song_information linebreak
    song_comment linebreak
    global_settings linebreak
    etc
    {
      def value
        FamitrackerParser::Song.new.tap do |song|
          song.export_description = export_description.value
          song.song_information = song_information.value
          song.song_comment = song_comment.value
          song.global_settings = global_settings.value
        end
      end
    }
  end

  rule export_description
    "# " program:([^\s]*) " text export " version:([^\r\n]*) linebreak
    {
      def value
        FamitrackerParser::ExportDescription.new.tap do |export_description|
          export_description.program = program.text_value
          export_description.version = version.text_value
        end
      end
    }
  end

  rule song_information
    "# Song information" linebreak
    "TITLE" spaces title:string linebreak
    "AUTHOR" spaces author:string linebreak
    "COPYRIGHT" spaces copyright:string linebreak
    {
      def value
        FamitrackerParser::SongInformation.new.tap do |song_information|
          song_information.title = title.value
          song_information.author = author.value
          song_information.copyright = copyright.value
        end
      end
    }
  end

  rule song_comment
    "# Song comment" linebreak
    "COMMENT" spaces comment:string linebreak
    {
      def value
        comment.value
      end
    }
  end

  rule global_settings
    "# Global settings" linebreak
    "MACHINE" spaces machine:integer linebreak
    "FRAMERATE" spaces framerate:integer linebreak
    "EXPANSION" spaces expansion:integer linebreak
    "VIBRATO" spaces vibrato:integer linebreak
    "SPLIT" spaces split:integer linebreak
    n163_gs:(
      linebreak "# Namco 163 global settings" linebreak
      "N163CHANNELS" spaces n163_channels:integer linebreak
    )?
    {
      def value
        require "pry"
        binding.pry
        FamitrackerParser::GlobalSettings.new.tap do |global_settings|
          global_settings.machine = machine.value
          global_settings.framerate = framerate.value
          global_settings.expansion = expansion.value
          global_settings.vibrato = vibrato.value
          global_settings.split = split.value
          global_settings.n163_channels = n163_gs.n163_channels.value if n163_gs.elements
        end
      end
    }
  end

  rule linebreak
    "\r\n"
  end

  rule spaces
    [\s]+
  end

  rule string
    '"' string_value:(('\"' / !'"' .)*) '"'
    {
      def value
        string_value.text_value
      end
    }
  end

  rule integer
    [-]? [0-9]+
    {
      def value
        text_value.to_i
      end
    }
  end

  rule hexadecimal_byte
    [0-9A-F] [0-9A-F]
    {
      def value
        text_value.to_i(16)
      end
    }
  end

  rule etc
    everything:(.+)
    {
      def value
        text_value
      end
    }
  end
end
